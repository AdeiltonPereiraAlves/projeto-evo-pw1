// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../prisma/sqlite-client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL_SQLITE")
}
model Usuario {
  id       String @id @default(uuid())
  nome     String
  email    String
  senha    String
  imagem   String?
  tipo     String // Substituindo o enum por String
  voluntario Voluntario?
  ong        Ong?
  
  
}

model Voluntario {
  id              String @id @default(uuid())
  usuarioId       String @unique
  usuario         Usuario @relation(fields: [usuarioId], references: [id])
  interesses      String // armazenará os valores como uma string separada por vírgulas
  habilidades     String // mesma solução para habilidades
  disponibilidade String // mesma solução para disponibilidade
  inscricoes Inscricao[]
  avaliacao Avaliacao[]
}
model Ong {
  id          String @id @default(uuid())
  usuarioId   String @unique
  usuario     Usuario @relation(fields: [usuarioId], references: [id])
  cnpj        String  @unique
  descricao   String
  visao       String
  areaAtuacao String // armazenará os valores como uma string separada por vírgulas
  endereco    String
  vagas Vaga[]
   avaliacao Avaliacao[]
}
model Vaga{
  id String @id @default(uuid())
  ongId String

  descricao String
  requesitos String
  status String
  duracao String
  localizacao String
  ong Ong @relation(fields:[ongId], references: [id])
  inscricoes Inscricao[]
}

model Inscricao{
  id String @id @default(uuid())
  voluntarioId String
  vagaId String
  data  DateTime @default(now())
  status String
  voluntario Voluntario @relation(fields:[voluntarioId], references: [id])
  vaga Vaga @relation(fields:[vagaId], references: [id])
}

model Avaliacao{
  id String @id @default(uuid())
  voluntarioId String
  ongId String
  data DateTime @default(now())
  frequecia String?
  tipo String
  comentario String
  nota Int
  voluntario Voluntario @relation(fields:[voluntarioId], references: [id])
  ong Ong @relation(fields:[ongId], references: [id])
}